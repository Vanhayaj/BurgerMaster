<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Burger Master - Trò chơi làm bánh burger</title>
  <style>
    :root {
      --primary-color: #FF6B6B;
      --secondary-color: #4ECDC4;
      --accent-color: #FFE66D;
      --dark-color: #292F36;
      --light-color: #F7FFF7;
    }
    
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      padding: 20px;
      background-color: #f5f5f5;
      color: var(--dark-color);
      max-width: 800px;
      margin: 0 auto;
    }
    
    h2, h3 {
      color: var(--primary-color);
    }
    
    .scene {
      background-color: white;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      margin-bottom: 20px;
      transition: all 0.3s ease;
    }
    
    .box {
      border: 2px dashed var(--secondary-color);
      min-height: 80px;
      margin-bottom: 20px;
      padding: 15px;
      border-radius: 8px;
      background-color: var(--light-color);
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      align-items: center;
    }
    
    .ingredient-item {
      background-color: var(--accent-color);
      padding: 8px 12px;
      border-radius: 20px;
      font-weight: bold;
      display: flex;
      align-items: center;
      gap: 5px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .tray {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 10px;
      margin-bottom: 20px;
    }
    
    .ingredient-btn {
      margin: 0;
      padding: 12px;
      cursor: pointer;
      border: none;
      border-radius: 8px;
      background-color: var(--light-color);
      color: var(--dark-color);
      font-weight: bold;
      display: flex;
      flex-direction: column;
      align-items: center;
      transition: all 0.2s ease;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .ingredient-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    .ingredient-btn.selected {
      background-color: var(--accent-color);
      box-shadow: 0 0 0 3px var(--primary-color);
    }
    
    .ingredient-btn i {
      font-size: 24px;
      margin-bottom: 5px;
    }
    
    #cookButton {
      padding: 12px 24px;
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 8px;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.2s ease;
      float: right;
    }
    
    #cookButton:hover {
      background-color: #ff5252;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    
    #cookButton:disabled {
      background-color: #cccccc;
      cursor: not-allowed;
      transform: none;
      box-shadow: none;
    }
    
    #judge {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 20px;
    }
    
    #judge img {
      max-width: 350px;
      max-height: 300px;
      border-radius: 50%;
      border: 5px solid var(--accent-color);
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    
    #dialogueBox {
      border: 2px solid var(--secondary-color);
      padding: 20px;
      margin-top: 20px;
      background: var(--light-color);
      border-radius: 8px;
      min-height: 100px;
      position: relative;
    }
    
    #dialogueBox:before {
      content: "";
      position: absolute;
      top: -15px;
      left: 50px;
      width: 0;
      height: 0;
      border-left: 15px solid transparent;
      border-right: 15px solid transparent;
      border-bottom: 15px solid var(--secondary-color);
    }
    
    #dialogueBox p {
      margin: 0 0 10px 0;
      animation: fadeIn 0.5s ease;
    }
    
    #dialogueBox p:last-child {
      margin-bottom: 0;
      font-weight: bold;
      color: var(--primary-color);
    }
    
    .rating-stars {
      display: flex;
      justify-content: center;
      margin-top: 10px;
      gap: 5px;
    }
    
    .star {
      color: #FFD700;
      font-size: 24px;
    }
    
    .star.empty {
      color: #cccccc;
    }
    
    .restart-btn {
      padding: 12px 24px;
      background-color: var(--secondary-color);
      color: white;
      border: none;
      border-radius: 8px;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.2s ease;
      display: block;
      margin: 20px auto 0;
    }
    
    .restart-btn:hover {
      background-color: #3dbeb6;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    
    .progress-container {
      width: 100%;
      background-color: #e0e0e0;
      border-radius: 5px;
      margin-bottom: 20px;
    }
    
    .progress-bar {
      height: 10px;
      background-color: var(--primary-color);
      border-radius: 5px;
      width: 0%;
      transition: width 0.5s ease;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
    
    .pulse {
      animation: pulse 0.5s ease;
    }
    
    /* Responsive design */
    @media (max-width: 600px) {
      .tray {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
      }
      
      #judge img {
        max-width: 350;
        max-height: 350;
      }
    }
  </style>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
  <h1>Burger Master <i class="fas fa-hamburger"></i></h1>

  
  
  <div class="progress-container">
    <div class="progress-bar" id="progressBar"></div>
  </div>
  
  <!-- Scene: Cooking -->
  <div id="sceneCooking" class="scene">
    <h2><i class="fas fa-fire"></i> Lò nướng</h2>
    <div id="grill" class="box">
      <p id="emptyMessage" style="color: #999; margin: 0;">Chọn nguyên liệu từ khay bên dưới...</p>
    </div>

    <h3><i class="fas fa-utensils"></i> Khay nguyên liệu</h3>
    <div id="tray" class="tray">
      <!-- Buttons sẽ được thêm bằng JS -->
    </div>

    <button id="cookButton" disabled><i class="fas fa-utensil-spoon"></i> Nấu</button>
    <div style="clear: both;"></div>
  </div>

  <!-- Scene: Rating -->
  <div id="sceneRating" class="scene" style="display: none;">
    <div id="judge">
      <img src="https://th.bing.com/th/id/OIP._foE0_x6ZJLTN66yC-8f8QHaDo?r=0&rs=1&pid=ImgDetMain" alt="Giám khảo Burger Master" />
      <h3>Giám khảo Burger Master</h3>
    </div>
    <div id="dialogueBox"></div>
    <button class="restart-btn" id="restartButton"><i class="fas fa-redo"></i> Chơi lại</button>
  </div>

  <script>
    const ingredients = [
      { name: "Vỏ bánh", icon: "fas fa-bread-slice" },
      { name: "Nước sốt chua cay", icon: "fas fa-pepper-hot" },
      { name: "Kẹo trái cây", icon: "fas fa-candy-cane" },
      { name: "Thịt nướng", icon: "fas fa-bacon" },
      { name: "Phô mai", icon: "fas fa-cheese" },
      { name: "Rau", icon: "fas fa-leaf" },
      { name: "Cà chua", icon: "fas fa-apple-alt" },
      { name: "Dưa chuột", icon: "fas fa-seedling" },
      { name: "Hành tây", icon: "fas fa-circle" },
      { name: "Ớt", icon: "fas fa-pepper-hot" },
      { name: "Sốt mayonnaise", icon: "fas fa-fill-drip" },
      { name: "Trứng", icon: "fas fa-egg" }
    ];
    
    const grill = [];
    let score = 0;

    const tray = document.getElementById("tray");
    const grillBox = document.getElementById("grill");
    const cookButton = document.getElementById("cookButton");
    const emptyMessage = document.getElementById("emptyMessage");
    const progressBar = document.getElementById("progressBar");
    const restartButton = document.getElementById("restartButton");

    function updateGrill() {
      const progress = (grill.length / 12) * 100;
      progressBar.style.width = `${progress}%`;
      
      if (grill.length === 0) {
        emptyMessage.style.display = "block";
        grillBox.innerHTML = '<p id="emptyMessage" style="color: #999; margin: 0;">Chọn nguyên liệu từ khay bên dưới...</p>';
      } else {
        emptyMessage.style.display = "none";
        grillBox.innerHTML = '';
        grill.forEach(ingredient => {
          const item = document.createElement("div");
          item.className = "ingredient-item";
          item.innerHTML = `<i class="${getIcon(ingredient)}"></i> ${ingredient}`;
          grillBox.appendChild(item);
        });
      }
      
      cookButton.disabled = grill.length < 0;
      
      // Hiệu ứng khi thêm nguyên liệu
      if (grill.length > 0) {
        grillBox.classList.add("pulse");
        setTimeout(() => grillBox.classList.remove("pulse"), 500);
      }
    }
    
    function getIcon(ingredientName) {
      const found = ingredients.find(item => item.name === ingredientName);
      return found ? found.icon : "fas fa-question";
    }

    // Tạo button nguyên liệu
    ingredients.forEach(ingredient => {
      const btn = document.createElement("button");
      btn.className = "ingredient-btn";
      btn.innerHTML = `<i class="${ingredient.icon}"></i> ${ingredient.name}`;
      btn.addEventListener("click", () => {
        const index = grill.indexOf(ingredient.name);
        if (index >= 0) {
          grill.splice(index, 1);
          btn.classList.remove("selected");
        } else {
          if (grill.length < 12) {
            grill.push(ingredient.name);
            btn.classList.add("selected");
          } else {
            alert("Bạn chỉ có thể chọn tối đa 12 nguyên liệu!");
          }
        }
        updateGrill();
      });
      tray.appendChild(btn);
    });

    cookButton.addEventListener("click", () => {
      document.getElementById("sceneCooking").style.display = "none";
      document.getElementById("sceneRating").style.display = "block";
      rateBurger();
    });
    
    restartButton.addEventListener("click", () => {
      location.reload();
    });

    function logDialogue(text, delay = 0) {
      return new Promise(resolve => {
        setTimeout(() => {
          const box = document.getElementById("dialogueBox");
          const p = document.createElement("p");
          p.textContent = text;
          box.appendChild(p);
          resolve();
        }, delay);
      });
    }
    
    function showStars(rating) {
      const box = document.getElementById("dialogueBox");
      const starsContainer = document.createElement("div");
      starsContainer.className = "rating-stars";
      
      for (let i = 1; i <= 6; i++) {
        const star = document.createElement("i");
        star.className = i <= rating ? "star fas fa-star" : "star far fa-star";
        starsContainer.appendChild(star);
      }
      
      box.appendChild(starsContainer);
    }

    async function rateBurger() {
      const box = document.getElementById("dialogueBox");
      box.innerHTML = ""; // Reset dialogue
      
      // Hiệu ứng chờ đánh giá
      await logDialogue("Giám khảo đang thưởng thức burger của bạn...", 500);
      await new Promise(resolve => setTimeout(resolve, 1500));
      box.innerHTML = "";
      
      // Đánh giá dựa trên nguyên liệu
      if (
        grill.includes("Vỏ bánh") &&
        grill.includes("Thịt nướng") &&
        grill.includes("Phô mai") &&
        grill.includes("Rau") &&
        grill.includes("Cà chua") &&
        grill.includes("Sốt mayonnaise")
      ) {
        await logDialogue("Wow! Một chiếc burger hoàn hảo với đầy đủ các lớp!");
        await logDialogue("Hương vị cân bằng, kết cấu tuyệt vời!", 500);
        await logDialogue("Tôi đánh giá:", 500);
        score = 6;
      } else if (
        grill.includes("Vỏ bánh") &&
        grill.includes("Rau") &&
        grill.includes("Phô mai")
      ) {
        await logDialogue("Bánh này khá giòn, thơm rau.");
        await logDialogue("Nhưng thiếu một chút thịt để hoàn hảo!", 500);
        await logDialogue("Tôi đánh giá:", 500);
        score = 4;
      } else if (
        grill.includes("Thịt nướng") &&
        grill.includes("Nước sốt chua cay") &&
        grill.includes("Ớt")
      ) {
        await logDialogue("Hương vị đậm đà và cay nồng!");
        await logDialogue("Phù hợp cho những ai thích ăn cay!", 500);
        await logDialogue("Tôi đánh giá:", 500);
        await logDialogue("À mà.... chờ đã, vỏ bánh đâu?", 800)
        score = 5;
      } else if (grill.includes("Kẹo trái cây")) {
        await logDialogue("Cái này là bánh burger hay món tráng miệng?");
        await logDialogue("Hương vị quá ngọt cho một chiếc burger!", 500);
        await logDialogue("Tôi đánh giá:", 500);
        score = 2;
      } else if (grill.length >= 6) {
        await logDialogue("Một chiếc burger nhiều nguyên liệu!");
        await logDialogue("Nhưng sự kết hợp chưa thực sự hài hòa.", 500);
        await logDialogue("Tôi đánh giá:", 500);
        score = 3;
      } else if (grill.length >= 3) {
        await logDialogue("Bánh burger của bạn cần cải thiện.");
        await logDialogue("Thiếu quá nhiều nguyên liệu cơ bản!", 500);
        await logDialogue("Tôi đánh giá:", 500);
        score = 2;
      } else if (grill.length >= 2) {
        await logDialogue("BẠN ĐANG KHÔNG NGHIÊM TÚC?");
        await logDialogue("THẬT KHÔNG THỂ TIN ĐƯỢC", 500);
        await logDialogue("Tôi đánh giá:", 500);
        score = 0;
      } else if (grill.length >= 1) {
        await logDialogue("Nghe này!");
        await logDialogue("BẠN ĐÃ BỊ SA THẢI", 500);
        score = 0;
      } else {
        await logDialogue("Đây thậm chí không thể gọi là một chiếc burger!");
        await logDialogue("Bạn cần học lại cách làm burger cơ bản!", 500);
        await logDialogue("Tôi đánh giá:", 500);
        score = 1;
      }
      
      showStars(score);
    }
  </script>
  <script>
  // Thêm đoạn này vào HTML
  document.addEventListener('DOMContentLoaded', function() {
    // Thay ID video YouTube của bạn (phần sau v= trong URL)
    const videoId = '-vU1CLsGdAQ'; // Ví dụ
    
    // Tạo thẻ div chứa player
    const ytPlayer = document.createElement('div');
    ytPlayer.id = 'youtube-music';
    ytPlayer.style.position = 'fixed';
    ytPlayer.style.bottom = '10px';
    ytPlayer.style.right = '10px';
    ytPlayer.style.width = '0';
    ytPlayer.style.height = '0';
    document.body.appendChild(ytPlayer);

    // Tải YouTube API
    const tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    document.head.appendChild(tag);

    // Tạo player
    let player;
    window.onYouTubeIframeAPIReady = function() {
      player = new YT.Player('youtube-music', {
        videoId: videoId,
        playerVars: {
          autoplay: 1,
          loop: 1,
          playlist: videoId, // Cần cho chế độ lặp
          controls: 0,
          disablekb: 1,
          fs: 0,
          modestbranding: 1,
          rel: 0
        },
        events: {
          'onReady': onPlayerReady
        }
      });
    };

    function onPlayerReady(event) {
      event.target.setVolume(50); // Chỉnh âm lượng (0-100)
      
      // Thêm nút điều khiển
      const musicBtn = document.createElement('button');
      musicBtn.id = 'ytMusicBtn';
      musicBtn.innerHTML = '<i class="fas fa-music"></i>';
      musicBtn.style.cssText = `
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: #ff6b6b;
        color: white;
        border: none;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        font-size: 20px;
        cursor: pointer;
        z-index: 1000;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
      `;
      document.body.appendChild(musicBtn);
      
      musicBtn.addEventListener('click', function() {
        if (player.getPlayerState() === YT.PlayerState.PLAYING) {
          player.pauseVideo();
          this.innerHTML = '<i class="fas fa-music-slash"></i>';
        } else {
          player.playVideo();
          this.innerHTML = '<i class="fas fa-music"></i>';
        }
      });
    }
  });
</script>
</body>
</html>
